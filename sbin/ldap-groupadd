#! /bin/sh -Cefu
###########################################################################
# ldap-groupadd 1.0
#
# Copyright (C) 2012 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
unfold() { exec sed -e ': in' -e 'N' -e 's/\n //' -e 't in' -e 'P' -e 'D'; }
me=$( which -- "${0}" || ls -d -- "${0}" )
dir=$( dirname -- "${me}" )
base=$( basename -- "${me}" )
case ${1-} in
--help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... GROUP

Options:
 -g, --gid GID        Use the group ID for the new group.
 -h, --help           Display this help message and exit.
 -K, --key KEY=VALUE  Override a default configuration.
 -o, --non-unique     (ignored)
 -r, --system         (ignored)
     --dump-ldif      Dump LDIF and exit.

Operands:
 GROUP            A name of the group whose account is to be modified using
                  administration privileges.

Configuration variables:
 GID_MIN          A minimum group ID for new groups.
 GID_MAX          A maximum group ID for new groups.
 GROUP_BASE_DN    A distinguished name (DN) of an LDAP entry to be used as
                  a search base for groups. This one takes precedence over
                  the GROUP_BASE_RDN variable.
 GROUP_BASE_RDN   A relative distinguished name (RDN) of an LDAP entry to be
                  used as a search base for groups. The GROUP_BASE_RDN variable
                  takes precedence over this one.
 GROUP_OU_RDN     A relative distinguished name (RDN) of an organization unit
                  LDAP subentry under the group search base. A new group will
                  be created under this subentry.
                  If the group name contains dashes, the default is to use
                  ou=PREFIX where PREFIX is the group name without the last
                  dash separated part.
                  If the group name does not contains dashes, the default is to
                  use ou=GROUP if that LDAP subentry exists.

Environment:
 LDAPBINDDN       A distinguished name (DN) to be used for binding to an LDAP
                  server. The default is to search for an distinguished name
                  (DN) based on the current real username.
 LDAPBINDPW       A password for the distinguished name (DN) to be used for
                  binding to an LDAP server. The default is to prompt for
                  a password.
 LDAPCONF         A system LDAP configuration file.
 LDAPRC           A user LDAP configuration file.
 LDAPURI          An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPMODIFY_OPTS  Options for ldapmodify(1).
 LDAPSEARCH_OPTS  Options for ldapsearch(1).
 LOGNAME          A username.
 SUDO_USER        A real username.
 USER             A fallback username.

Files:
 /etc/${base%ldap-*}ldap-login.def      LDAP shadow suite configuration.
 ${dir%[\\/]*}/etc/${base%ldap-*}ldap-login.def  LDAP shadow suite configuration.
 /etc/ldap/ldap.conf      LDAP configuration.

__USAGE__
--mode=* ) exec "${dir}/../bin/${base%ldap-*}ldap-passwd" "${@}" ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${dir}/../bin/${base%ldap-*}ldap-passwd" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
GID_MIN=${GID_MIN:-10000}
GID_MAX=${GID_MAX:-60000}

###########################################################################
#
# Options.
#
###########################################################################
while getopts g:hK:or-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--gid | --key )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*} OPTARG= ;;
	esac
	case -${OPT} in
	--gid        | -g ) GROUP_GID=${OPTARG} ;;
	--help       | -h ) exec "${0}" --help >&3 ;;
	--key        | -K ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--non-unique | -o ) ;;
	--system     | -r ) ;;
	--dump-ldif  ) exec >&3 ;;
	--*          ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*            ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
GROUP=${1-}
: "${GROUP:?}"

# LDAPBINDDN.
LDAPBINDDN=${LDAPBINDDN-$(
	printf '%s\n' "${SUDO_USER-${LOGNAME}}" 'admin' \
	| ldapsearch -LLLM ${LDAPSEARCH_OPTS} -f - -z 1 -- \
		"(&(objectClass=simpleSecurityObject)(cn=%s))" 1.1 \
		2> /dev/null \
	| unfold \
	| sed -e '/^dn: */!d' -e 's///' -e 'q'
	)}
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# LDAPBINDDN=%s\n' "${LDAPBINDDN}" ;;
esac

###########################################################################
#
# Values.
#
###########################################################################
# GROUP_GID.
GROUP_GID=${GROUP_GID:-$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -- \
		"(objectClass=posixGroup)" gidNumber \
	| unfold \
	| awk -F ': ' -v min="${GID_MIN:?}" -v max="${GID_MAX:?}" '
$1 != "gidNumber" { next }
$2 == min { ++min; while ( used[min] ) delete used[min++] }
min < $2 && $2 <= max { used[$2] = 1 }
END { if ( min <= max ) print min }
'
	)}
: "${GROUP_GID:?}"

# GROUP_BASE_DN.
case ${GROUP_BASE_DN++},${GROUP_BASE_RDN++} in
+,* ) ;;
*,+ ) BASE_DN=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -s base -- "(objectClass=*)" 1.1 \
	| unfold \
	| sed -e '/^dn: /!d' -e 's///' -e 'q'
	); GROUP_BASE_DN=${GROUP_BASE_RDN},${BASE_DN:?} ;;
*,* ) GROUP_BASE_DN=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -z 1 -- \
		"(objectClass=posixGroup)" 1.1 2> /dev/null \
	| unfold \
	| sed -e '/^dn: [^\n]*,\(ou=[^\n]*\)$/!d' -e 's//\1/' -e 'q'
	) ;;
esac
: "${GROUP_BASE_DN:?}"
unset RDN
while :
do
	###################################################################
	#
	# LDIF.
	#
	###################################################################
	DN=${RDN+${RDN},}${GROUP_BASE_DN}
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -b "${DN}" -s base -- \
		'(objectClass=*)' 1.1 1> /dev/null 2>&1 && :
	case ${?},${GROUP},${GROUP_OU_RDN++},${RDN++} in
	0,*,*,*  ) ;;
	*,*,*,   | \
	*,*,+,+  | \
	*,*-*,,+ ) RDN2=${DN%%,*}; cat << __LDIF__ ;;
dn: ${DN}
changetype: add
objectClass: organizationalUnit
${RDN2%%=*}: ${RDN2#*=}

__LDIF__
	*,*,*,*  ) break ;;
	esac
	###################################################################
	#
	# Values.
	#
	###################################################################
	# GROUP_BASE_DN.
	GROUP_BASE_DN=${DN}
	# GROUP_OU_RDN.
	case ${RDN++},${GROUP_OU_RDN-} in
	+,*,* ) GROUP_OU_RDN=${GROUP_OU_RDN%,*} ;;
	+,*   ) break ;;
	esac
	# RDN.
	case ${GROUP_OU_RDN++} in
	+ ) RDN=${GROUP_OU_RDN##*,} ;;
	* ) RDN=ou=${GROUP%-*} ;;
	esac
done

# GROUP_DN.
GROUP_DN=cn=${GROUP},${GROUP_BASE_DN}

###########################################################################
#
# LDIF.
#
###########################################################################
# GROUP.
cat << __LDIF__
dn: ${GROUP_DN}
changetype: add
objectClass: posixGroup
cn: ${GROUP}
gidNumber: ${GROUP_GID}

__LDIF__

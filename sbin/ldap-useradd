#! /bin/sh -Cefu
###########################################################################
# ldap-useradd 1.0
#
# Copyright (C) 2012 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
unfold() { exec sed -e ': in' -e 'N' -e 's/\n //' -e 't in' -e 'P' -e 'D'; }
me=$( which -- "${0}" || ls -d -- "${0}" )
dir=$( dirname -- "${me}" )
base=$( basename -- "${me}" )
case ${1-} in
--help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... USER

Add a new LDAP user account to an LDAP server using administrative privileges.

Options:
 -b, --base-dir BASE_DIR       Use the base directory for home directories.
 -c, --comment COMMENT         Use the full name for the new account.
 -d, --home-dir HOME_DIR       Use the home directory for the new account.
 -e, --expiredate EXPIRE_DATE  Use the expiration date for the new account.
 -f, --inactive INACTIVE       Use the password inactivity period.
 -g, --gid GID                 Use the primary group ID for the new account.
 -G, --groups GROUPS           Use the secondary groups for the new account.
 -h, --help                    Display this help message and exit.
 -K, --key KEY=VALUE           Override a default configuration.
 -M, --no-create-home          (ignored)
 -N, --no-user-group           Do not create a group with the same name.
 -o, --non-unique              (ignored)
 -r, --system                  Create a system user.
 -s, --shell SHELL             Use the login shell for the new account.
 -u, --uid UID                 Use the user ID for the new account.
 -U, --user-group              Create a group with the same name.
     --dry-run                 Dump LDIF and exit.

Operands:
 USER             The username (the user identifier defined by the uid
                  attribute) of the LDAP user account which is to be created
                  using administrative privileges.

Configuration variables:
 GID_MIN          A minimum group ID for new groups.
 GID_MAX          A maximum group ID for new groups.
 SYS_GID_MIN      A minimum group ID for new system groups.
 SYS_GID_MAX      A maximum group ID for new system groups.
 GROUP_BASE_DN    A distinguished name (DN) of an LDAP entry to be used as
                  a search base for groups. This one takes precedence over
                  the GROUP_BASE_RDN variable.
                  The default is to search for an organizationalUnit LDAP entry
                  containing posixGroup LDAP entries.
 GROUP_BASE_RDN   A relative distinguished name (RDN) of an LDAP entry to be
                  used as a search base for groups. The GROUP_BASE_RDN variable
                  takes precedence over this one.
 GROUP_OU_RDN     A relative distinguished name (RDN) of an organizationalUnit
                  LDAP subentry under the group search base. A new group will
                  be created under this subentry.
                  If the group name contains dashes, the default is to use
                  ou=GROUP_PREFIX where GROUP_PREFIX is the group name without
                  the last dash separated part.
                  If the group name does not contains dashes, the default is to
                  use ou=GROUP if that LDAP subentry exists.
 UID_MIN          A minimum user ID for new user accounts.
 UID_MAX          A maximum user ID for new user accounts.
 SYS_UID_MIN      A minimum user ID for new system user accounts.
 SYS_UID_MAX      A maximum user ID for new system user accounts.
 USER_BASE_DN     A distinguished name (DN) of an LDAP entry to be used as
                  a search base for users. This one takes precedence over
                  the USER_BASE_RDN variable.
                  The default is to search for an organizationalUnit LDAP entry
                  containing posixAccount LDAP entries.
 USER_BASE_RDN    A relative distinguished name (RDN) of an LDAP entry to be
                  used as a search base for users. The USER_BASE_RDN variable
                  takes precedence over this one.
 USER_OU_RDN      A relative distinguished name (RDN) of an organizationalUnit
                  LDAP subentry under the user search base. A new user will be
                  created under this subentry.
                  If the username contains dashes, the default is to use
                  ou=USER_PREFIX where USER_PREFIX is the username without
                  the last dash separated part.
                  If the username does not contains dashes, the default is to
                  use ou=USER if that LDAP subentry exists.
 USERGROUPS_ENAB  Whether to enable user private groups (UPG).
                  If enabled, the default is to create a new group with name of
                  the user.

Environment:
 LDAPBINDDN       A distinguished name (DN) to be used for binding to an LDAP
                  server. The default is to search for a distinguished name
                  (DN) based on the current real username.
 LDAPBINDPW       A password for the distinguished name (DN) to be used for
                  binding to an LDAP server. The default is to prompt for
                  a password.
 LDAPCONF         A system LDAP configuration file.
 LDAPRC           A user LDAP configuration file.
 LDAPURI          An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPMODIFY_OPTS  Options for ldapmodify(1).
 LDAPSEARCH_OPTS  Options for ldapsearch(1).
 LOGNAME          A username.
 SUDO_USER        A real username.
 USER             A fallback username.

Files:
 /etc/${base%ldap-*}ldap-login.defs      LDAP shadow suite configuration.
 ${dir%[\\/]*}/etc/${base%ldap-*}ldap-login.defs  LDAP shadow suite configuration.
 /etc/ldap/ldap.conf       LDAP configuration. See also ldap.conf(5).

__USAGE__
--mode=* ) exec "${dir}/../bin/${base%ldap-*}ldap-passwd" "${@}" ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${dir}/../bin/${base%ldap-*}ldap-passwd" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
BASE_DIR=${BASE_DIR:-/home/users}
GID_MIN=${GID_MIN:-10000} SYS_GID_MIN=${SYS_GID_MIN:-50000}
GID_MAX=${GID_MAX:-60000} SYS_GID_MAX=${SYS_GID_MAX:-60000}
UID_MIN=${UID_MIN:-10000} SYS_UID_MIN=${SYS_UID_MIN:-50000}
UID_MAX=${UID_MAX:-60000} SYS_UID_MAX=${SYS_UID_MAX:-60000}
USER_SHELL=${USER_SHELL-/bin/bash}
USERGROUPS_ENAB=${USERGROUPS_ENAB-yes}
unset USER_COMMENT USER_GROUPS USER_HOME_DIR
NORMAL=+ SYSTEM=

###########################################################################
#
# Options.
#
###########################################################################
while getopts b:c:d:e:f:g:G:hK:MNors:u:U-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--base-dir   | \
	--comment    | \
	--home       | \
	--home-dir   | \
	--expiredate | \
	--inactive   | \
	--gid        | \
	--groups     | \
	--key        | \
	--shell      | \
	--uid        )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*} OPTARG= ;;
	esac
	case -${OPT} in
	--base-dir       | -b ) BASE_DIR=${OPTARG} ;;
	--comment        | -c ) USER_COMMENT=${OPTARG} ;;
	--home           |    \
	--home-dir       | -d ) USER_HOME_DIR=${OPTARG} ;;
	--expiredate     | -e )
		USER_EXPIRE=${OPTARG}
		case ${USER_EXPIRE} in *[![:digit:]]* )
			USER_EXPIRE=$( date -d "${USER_EXPIRE} UTC" +'%s' )
			USER_EXPIRE=$(( ${USER_EXPIRE} / ( 24 * 60 * 60 ) ))
		esac
		;;
	--inactive       | -f ) USER_INACTIVE=${OPTARG} ;;
	--gid            | -g ) USER_GID=${OPTARG} GROUP_GID=${OPTARG} ;;
	--groups         | -G ) USER_GROUPS=${OPTARG} ;;
	--help           | -h ) exec "${0}" --help >&3 ;;
	--key            | -K ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--no-log-init    | -l ) ;;
	--no-create-home | -M ) ;;
	--no-user-group  | -N ) USERGROUPS_ENAB=no ;;
	--non-unique     | -o ) ;;
	--system         | -r ) NORMAL= SYSTEM=+ ;;
	--shell          | -s ) USER_SHELL=${OPTARG} ;;
	--uid            | -u ) USER_UID=${OPTARG} ;;
	--user-group     | -U ) USERGROUPS_ENAB=yes ;;
	--dry-run        ) exec >&3 ;;
	--*              ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*                ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
USER=${1-}
: "${USER:?}"

# LDAPBINDDN.
LDAPBINDDN=${LDAPBINDDN-$(
	printf '%s\n' "${SUDO_USER-${LOGNAME}}" 'admin' \
	| ldapsearch -LLLM ${LDAPSEARCH_OPTS} -f - -z 1 -- \
		"(&(objectClass=simpleSecurityObject)(cn=%s))" 1.1 \
		2> /dev/null \
	| unfold \
	| sed -e '/^dn: */!d' -e 's///' -e 'q'
	)}
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# LDAPBINDDN=%s\n' "${LDAPBINDDN}" ;;
esac

###########################################################################
#
# Values.
#
###########################################################################
# USER_GID.
case ${USERGROUPS_ENAB} in
yes )
	USER_GID=$(
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} -z 1 -- \
			"(&(objectClass=posixGroup)(cn=${USER}))"	\
			gidNumber					\
			2> /dev/null					\
		| unfold \
		| sed -e '/^gidNumber: /!d' -e 's///' -e 'q'
		)
	case ${USER_GID} in
	'' )
		set -- ${SYSTEM:+ --system } -- "${USER}"
		. "${0%ldap-*}ldap-groupadd"
		USER_GID=${GROUP_GID:?}
		;;
	esac
	;;
* )
	case ${USER_GID-users} in
	*[![:digit:]]* ) USER_GID=$(
		getent -- group "${USER_GID-users}" \
		| cut -d : -f 3
		) ;;
	esac
	;;
esac
: "${USER_GID:?}"

# USER_UID.
USER_UID=${USER_UID:-$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -- \
		"(objectClass=posixAccount)" uidNumber \
	| unfold \
	| awk \
		-F ': ' \
		-v min="${NORMAL:+${UID_MIN:?}}${SYSTEM:+${SYS_UID_MIN:?}}" \
		-v max="${NORMAL:+${UID_MAX:?}}${SYSTEM:+${SYS_UID_MAX:?}}" '
$1 != "uidNumber" { next }
$2 == min { ++min; while ( used[min] ) delete used[min++] }
min < $2 && $2 <= max { used[$2] = 1 }
END { if ( min <= max ) print min }
'
	)}
: "${USER_UID:?}"

# USER_BASE_DN.
case ${USER_BASE_DN++},${USER_BASE_RDN++} in
+,* ) ;;
*,+ ) BASE_DN=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -s base -- "(objectClass=*)" 1.1 \
	| unfold \
	| sed -e '/^dn: /!d' -e 's///' -e 'q'
	); USER_BASE_DN=${USER_BASE_RDN},${BASE_DN:?} ;;
*,* ) USER_BASE_DN=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -z 1 -- \
		"(objectClass=posixAccount)" 1.1 2> /dev/null \
	| unfold \
	| sed -e '/^dn: [^\n]*,\(ou=[^\n]*\)$/!d' -e 's//\1/' -e 'q'
	) ;;
esac
: "${USER_BASE_DN:?}"
unset RDN
while :
do
	###################################################################
	#
	# LDIF.
	#
	###################################################################
	DN=${RDN+${RDN},}${USER_BASE_DN}
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -b "${DN}" -s base -- \
		'(objectClass=*)' 1.1 1> /dev/null 2>&1 && :
	case ${?},${USER},${USER_OU_RDN++},${RDN++} in
	0,*,*,*  ) ;;
	*,*,*,   | \
	*,*,+,+  | \
	*,*-*,,+ ) RDN2=${DN%%,*}; cat << __LDIF__ ;;
dn: ${DN}
changetype: add
objectClass: organizationalUnit
${RDN2%%=*}: ${RDN2#*=}

__LDIF__
	*,*,*,*  ) break ;;
	esac
	###################################################################
	#
	# Values.
	#
	###################################################################
	# USER_BASE_DN.
	USER_BASE_DN=${DN}
	# USER_OU_RDN.
	case ${RDN++},${USER_OU_RDN-} in
	+,*,* ) USER_OU_RDN=${USER_OU_RDN%,*} ;;
	+,*   ) break ;;
	esac
	# RDN.
	case ${USER_OU_RDN++} in
	+ ) RDN=${USER_OU_RDN##*,} ;;
	* ) RDN=ou=${USER%-*} ;;
	esac
done

# USER_DN.
USER_DN=uid=${USER},${USER_BASE_DN}

# USER_COMMENT.
USER_COMMENT=${USER_COMMENT:-${USER}}
: "${USER_COMMENT:?}"

# USER_HOME_DIR.
USER_HOME_DIR=${USER_HOME_DIR:-${BASE_DIR:?}/${USER}}
: "${USER_HOME_DIR:?}"

###########################################################################
#
# LDIF.
#
###########################################################################
# USER.
cat << __LDIF__
dn: ${USER_DN}
changetype: add
objectClass: posixAccount
objectClass: shadowAccount${NORMAL:+
objectClass: inetOrgPerson}${SYSTEM:+
objectClass: organizationalRole}
cn: ${USER_COMMENT}
gidNumber: ${USER_GID}${NORMAL:+
givenName: ${USER_COMMENT%%[[:space:]]*}}
homeDirectory: ${USER_HOME_DIR}
loginShell: ${USER_SHELL}${USER_EXPIRE+
shadowExpire: ${USER_EXPIRE}}${USER_INACTIVE+
shadowInactive: ${USER_INACTIVE}}${NORMAL:+
sn: ${USER_COMMENT#*[[:space:]]}}
uidNumber: ${USER_UID}

__LDIF__

# USER_GROUPS.
case ${USER_GROUPS:++} in
+ ) set -- -a -G "${USER_GROUPS}" -- "${USER}"; . "${0%ldap-*}ldap-usermod" ;;
esac

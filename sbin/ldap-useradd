#! /bin/sh -Cefu
###########################################################################
# ldap-useradd 1.0
#
# Copyright (C) 2012 - 2019 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
me=$( which -- "${0}" || exec ls -d -- "${0}" )
dir=$( exec dirname -- "${me}" )
base=$( exec basename -- "${me}" )
wrapper=${dir}/../bin/${base%-*}-passwd
case ${1-} in
--help=man        ) exec "${0}" --help=troff | exec man -l -- -; exit ;;
--help=troff      ) exec help2man \
	-L 'C.UTF-8' \
	-N \
	-n 'create a new LDAP POSIX user account' \
	-s 8 \
	-- "${0}" ;;
--help=* | --help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... USER

Add a new LDAP POSIX user account to an LDAP server using administrative
privileges.

Options:
 -b, --base-dir BASE_DIR       Use the base directory for home directories.
 -c, --comment COMMENT         Use the full name for the new account.
 -e, --expiredate EXPIRE_DATE  Use the expiration date for the new account.
 -g, --gid GID                 Use the primary group ID for the new account.
 -G, --groups GROUPS           Use the secondary groups for the new account.
 -h, --help[=FORMAT]           Show this help message and exit.
 -d, --home-dir HOME_DIR       Use the home directory for the new account.
 -f, --inactive INACTIVE       Use the password inactivity period.
 -K, --key KEY=VALUE           Override a default configuration.
 -M, --no-create-home          (ignored)
 -l, --no-log-init             (ignored)
 -N, --no-user-group           Do not create a group with the same name.
 -o, --non-unique              (ignored)
 -R, --root CHROOT_DIR         (ignored)
 -s, --shell SHELL             Use the login shell for the new account.
 -r, --system                  Create a system user account.
 -u, --uid UID                 Use the user ID for the new account.
 -U, --user-group              Create a group with the same name.
 -V, --version                 Show version information and exit.
     --dry-run                 Dump LDIF and exit.

Operands:
 USER             The username (the user identifier defined by the uid
                  attribute) of the LDAP POSIX user account which is to be
                  created using administrative privileges.

Configuration variables:
 BASE_DIR          A base directory for home directories.
 GID_MIN           A minimum group ID for new groups.
 GID_MAX           A maximum group ID for new groups.
 SYS_GID_MIN       A minimum group ID for new system groups.
 SYS_GID_MAX       A maximum group ID for new system groups.
 GROUP_BASE_DN     A distinguished name (DN) of an LDAP entry to be used as
                   a search base for POSIX groups. This one takes precedence
                   over the GROUP_BASE_RDN variable.
                   The default is to search for an organizationalUnit LDAP
                   entry containing posixGroup LDAP entries.
 GROUP_BASE_RDN    A relative distinguished name (RDN) of an LDAP entry to be
                   used as a search base for POSIX groups. The GROUP_BASE_DN
                   variable takes precedence over this one.
 GROUP_OU_RDN      A relative distinguished name (RDN) of an organizationalUnit
                   LDAP subentry under the POSIX group search base. A new POSIX
                   group will be created under this subentry.
                   If the group name contains dashes, the default is to use
                   ou=GROUP_PREFIX where GROUP_PREFIX is the group name without
                   the last dash separated part.
                   If the group name does not contains dashes, the default is
                   to use ou=GROUP if that LDAP subentry exists.
 UID_MIN           A minimum user ID for new user accounts.
 UID_MAX           A maximum user ID for new user accounts.
 SYS_UID_MIN       A minimum user ID for new system user accounts.
 SYS_UID_MAX       A maximum user ID for new system user accounts.
 USER_BASE_DN      A distinguished name (DN) of an LDAP entry to be used as
                   a search base for POSIX user accounts. This one takes
                   precedence over the USER_BASE_RDN variable.
                   The default is to search for an organizationalUnit LDAP
                   entry containing posixAccount LDAP entries.
 USER_BASE_RDN     A relative distinguished name (RDN) of an LDAP entry to be
                   used as a search base for POSIX user accounts.
                   The USER_BASE_DN variable takes precedence over this one.
 USER_OU_RDN       A relative distinguished name (RDN) of an organizationalUnit
                   LDAP subentry under the POSIX user account search base.
                   A new POSIX user account will be created under this
                   subentry.
                   If the username contains dashes, the default is to use
                   ou=USER_PREFIX where USER_PREFIX is the username without
                   the last dash separated part.
                   If the username does not contains dashes, the default is to
                   use ou=USER if that LDAP subentry exists.
 USERGROUPS_ENAB   Whether to enable user private groups (UPG).
                   If enabled, the default is to create a new POSIX group with
                   name of the POSIX user account.

Environment:
 LDAPBINDDN        A distinguished name (DN) to be used for binding to an LDAP
                   server. The default is to search for a distinguished name
                   (DN) based on the current real username.
 LDAPBINDPW        A password for the distinguished name (DN) to be used for
                   binding to an LDAP server. The default is to prompt for
                   a password.
 LDAPCONF          A system LDAP configuration file.
 LDAPRC            A user LDAP configuration file.
 LDAPURI           An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPDEFAULT_OPTS  Default options for ldapmodify(1), ldapsearch(1) and
                   ldapwhoami(1).
 LDAPMODIFY_OPTS   Options for ldapmodify(1).
 LDAPSEARCH_OPTS   Options for ldapsearch(1).
 LDAPWHOAMI_OPTS   Options for ldapwhoami(1).
 LOGNAME           A username.
 SUDO_USER         A real username.
 USER              A fallback username.

Files:
 /etc/${base%-*}-login.defs      LDAP shadow suite configuration.
 ${dir%[\\/]*}/etc/${base%-*}-login.defs  LDAP shadow suite configuration.
 /etc/ldap/ldap.conf       LDAP configuration. See also ldap.conf(5).

__USAGE__
--mode=*  ) exec "${wrapper}" "${@}" ;;
--version ) unset LDAP_HAS_FRONTEND ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${wrapper}" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
export USER USER_DN USER_DN_SPEC
BASE_DIR=${BASE_DIR:-/home/users}
GID_MIN=${GID_MIN:-10000} SYS_GID_MIN=${SYS_GID_MIN:-50000}
GID_MAX=${GID_MAX:-60000} SYS_GID_MAX=${SYS_GID_MAX:-60000}
UID_MIN=${UID_MIN:-10000} SYS_UID_MIN=${SYS_UID_MIN:-50000}
UID_MAX=${UID_MAX:-60000} SYS_UID_MAX=${SYS_UID_MAX:-60000}
USER_SHELL=${USER_SHELL-/bin/bash}
USERGROUPS_ENAB=${USERGROUPS_ENAB-yes}
unset USER_COMMENT USER_GROUPS USER_HOME_DIR USER_UID
NORMAL=+ SYSTEM=

###########################################################################
#
# Options.
#
###########################################################################
while getopts b:c:d:e:f:g:G:hK:lMNoR:rs:u:UV-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--base-dir   | \
	--comment    | \
	--home       | \
	--home-dir   | \
	--expiredate | \
	--inactive   | \
	--gid        | \
	--groups     | \
	--key        | \
	--root       | \
	--shell      | \
	--uid        )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*}; unset OPTARG ;;
	esac
	case -${OPT}${OPTARG+=} in
	--base-dir=      | -b* ) BASE_DIR=${OPTARG} ;;
	--comment=       | -c* ) USER_COMMENT=${OPTARG} ;;
	--expiredate=    | -e* )
		USER_EXPIRE=${OPTARG}
		case ${USER_EXPIRE} in *[![:digit:]]* )
			USER_EXPIRE=$(
				exec date -d "${USER_EXPIRE} UTC" +'%s'
				)
			USER_EXPIRE=$(( ${USER_EXPIRE} / ( 24 * 60 * 60 ) ))
		esac
		;;
	--gid=           | -g* ) USER_GID=${OPTARG} GROUP_GID=${OPTARG} ;;
	--groups=        | -G* ) USER_GROUPS=${OPTARG} ;;
	--help           | -h* | \
	--help=          ) exec "${0}" --help"${OPTARG+=${OPTARG}}" 3>&- ;;
	--home=          | \
	--home-dir=      | -d* ) USER_HOME_DIR=${OPTARG} ;;
	--inactive=      | -f* ) USER_INACTIVE=${OPTARG} ;;
	--key=           | -K* ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--no-create-home | -M* ) ;;
	--no-log-init    | -l* ) ;;
	--no-user-group  | -N* ) USERGROUPS_ENAB=no ;;
	--non-unique     | -o* ) ;;
	--root=          | -R* ) ;;
	--shell=         | -s* ) USER_SHELL=${OPTARG} ;;
	--system         | -r* ) NORMAL= SYSTEM=+ ;;
	--uid=           | -u* ) USER_UID=${OPTARG} ;;
	--user-group     | -U* ) USERGROUPS_ENAB=yes ;;
	--version        | -V* ) exec "${0}" --version 3>&- ;;
	--dry-run        ) exec 3>&1 ;;
	--*              ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*                ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
USER=${1-}
: "${USER:?}"

###########################################################################
#
# Values.
#
###########################################################################
# LDAPBINDDN.
case ${LDAPBINDDN++} in '' )
	LDAPBINDDN=$( exec "${wrapper}" --mode=binddn-admin )
	export LDAPBINDDN
	printf '# ,,,[%s],,,\n' "LDAPBINDDN=${LDAPBINDDN}" >&3
esac
echo >&3

# USER_GID.
case ${USERGROUPS_ENAB},${USER_GID-},${USER_GID++} in
yes,, )
	USER_GID=$(
		exec ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-a always \
			-o ldif-wrap=no \
			-z 1 \
			-- "(&(objectClass=posixGroup)(cn=${USER}))" gidNumber \
			2> /dev/null \
		| exec sed -e '/^gidNumber: /!d' -e 's///' -e 'q'
		)
	case ${USER},${USER_GID} in
	*=*,* ) ;;
	*,    )
		set -- ${SYSTEM:+ --system } -- "${USER}"
		. "${0%-*}-groupadd"
		USER_GID=${GROUP_GID:?}
		;;
	esac
	;;
*,*[![:digit:]]*,+ | *,, )
	USER_GID=$(
		exec getent -- group "${USER_GID-users}" \
		| exec cut -d : -f 3
		)
	;;
esac
: "${USER_GID:?}"

# USER_UID.
USER_UID=${USER_UID:-$(
	exec ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
		-a always \
		-o ldif-wrap=no \
		-- "(objectClass=posixAccount)" uidNumber \
	| exec awk \
		-F ': ' \
		-v min="${NORMAL:+${UID_MIN:?}}${SYSTEM:+${SYS_UID_MIN:?}}" \
		-v max="${NORMAL:+${UID_MAX:?}}${SYSTEM:+${SYS_UID_MAX:?}}" '
$1 != "uidNumber" { next }
$2 == min { ++min; while ( used[min] ) delete used[min++] }
min < $2 && $2 <= max { used[$2] = 1 }
END { if ( min <= max ) print min }
'
	)}
: "${USER_UID:?}"

# USER_DN.
case ${USER} in
*=* ) USER_DN=${USER} ;;
*   )
	# USER_BASE_DN.
	case ${USER_BASE_DN++},${USER_BASE_RDN++} in
	+,* ) ;;
	*,+ )
		BASE_DN_SPEC=$(
			exec ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
				-o ldif-wrap=no \
				-s base \
				-- "(objectClass=*)" 1.1 \
			| exec sed -e '/^dn:/!d' -e 'q'
			)
		case ${BASE_DN_SPEC} in
		'dn:: '* ) BASE_DN=$(
			echo "${BASE_DN_SPEC#"dn:: "}" \
			| exec base64 -d
			) ;;
		'dn: '*  ) BASE_DN=${BASE_DN_SPEC#"dn: "} ;;
		*        ) BASE_DN= ;;
		esac
		USER_BASE_DN=${USER_BASE_RDN},${BASE_DN:?}
		;;
	*,* )
		USER_DN_SPEC=$(
			exec ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
				-a always \
				-o ldif-wrap=no \
				-z 1 \
				-- "(objectClass=posixAccount)" 1.1 \
				2> /dev/null \
			| exec sed -e '/^dn:/!d' -e 'q'
			)
		case ${USER_DN_SPEC} in
		'dn:: '* ) USER_DN=$(
			echo "${USER_DN_SPEC#"dn:: "}" \
			| exec base64 -d
			) ;;
		'dn: '*  ) USER_DN=${USER_DN_SPEC#"dn: "} ;;
		*        ) USER_DN= ;;
		esac
		case ${USER_DN:?} in
		*,ou=* ) USER_BASE_DN=ou=${USER_DN##*,ou=} ;;
		*      ) USER_BASE_DN=${USER_DN#*,} ;;
		esac
		;;
	esac
	: "${USER_BASE_DN:?}"
	# USER_RDN.
	case ${USER} in
	*[![:alnum:]_\\@.-]* ) USER_RDN=uid=$(
		printf '%s' "${USER}" \
		| exec od -A n -t x1 \
		| exec tr -d -- '\n' \
		| exec tr -- ' ' '\\'
		) ;;
	* ) USER_RDN=uid=${USER} ;;
	esac
	# USER_DN, USER_DN_SPEC.
	unset RDN
	while :
	do
		###########################################################
		#
		# LDIF.
		#
		###########################################################
		DN=${RDN+${RDN},}${USER_BASE_DN}
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-b "${DN}" \
			-s base \
			-- '(objectClass=*)' 1.1 \
			1> /dev/null \
			2>&1 ||
		case ${USER_RDN},${USER_OU_RDN++},${RDN++} in
		*,*,       | \
		*,+,+      | \
		uid=*-*,,+ )
			case ${DN} in
			*[![:alnum:]_\\@=.,-]* ) DN_SPEC="dn:: $(
				printf '%s' "${DN}" \
				| exec base64 -w 0
				)" ;;
			* ) DN_SPEC="dn: ${DN}" ;;
			esac
			cat << __LDIF__ >&3
${DN_SPEC}
changetype: add
objectClass: organizationalUnit

__LDIF__
			;;
		*,*,*      ) break ;;
		esac
		###########################################################
		#
		# Values.
		#
		###########################################################
		# USER_BASE_DN.
		USER_BASE_DN=${DN}
		# USER_OU_RDN.
		case ${RDN++},${USER_OU_RDN-} in
		+,*,* ) USER_OU_RDN=${USER_OU_RDN%,*} ;;
		+,*   ) break ;;
		esac
		# RDN.
		case ${USER_OU_RDN++} in
		+ ) RDN=${USER_OU_RDN##*,} ;;
		* ) RDN=ou=${USER_RDN#*=}; RDN=${RDN%-*} ;;
		esac
	done
	USER_DN=${USER_RDN},${USER_BASE_DN}
	;;
esac
case ${USER_DN} in
*[![:alnum:]_\\@=.,-]* ) USER_DN_SPEC="dn:: $(
	printf '%s' "${USER_DN}" \
	| exec base64 -w 0
	)" ;;
* ) USER_DN_SPEC="dn: ${USER_DN}" ;;
esac
: "${USER_DN:?}" "${USER_DN_SPEC:?}"

# USER_COMMENT.
USER_COMMENT=${USER_COMMENT:-${USER}}
: "${USER_COMMENT:?}"

# USER_HOME_DIR.
USER_HOME_DIR=${USER_HOME_DIR:-${BASE_DIR:?}/${USER}}
: "${USER_HOME_DIR:?}"

###########################################################################
#
# LDIF.
#
###########################################################################
# USER.
cat << __LDIF__ >&3
${USER_DN_SPEC}
changetype: add
objectClass: posixAccount
objectClass: shadowAccount${NORMAL:+
objectClass: inetOrgPerson}${SYSTEM:+
objectClass: organizationalRole}
cn: ${USER_COMMENT}
gidNumber: ${USER_GID}${NORMAL:+
givenName: ${USER_COMMENT%%[[:space:]]*}}
homeDirectory: ${USER_HOME_DIR}
loginShell: ${USER_SHELL}${USER_EXPIRE+
shadowExpire: ${USER_EXPIRE}}${USER_INACTIVE+
shadowInactive: ${USER_INACTIVE}}${NORMAL:+
sn: ${USER_COMMENT#*[[:space:]]}}
uidNumber: ${USER_UID}

__LDIF__

# USER_GROUPS.
case ${USER_GROUPS:++} in
+ )
	set -- -a -G "${USER_GROUPS}" -- "${USER}"
	. "${0%-*}-usermod"
	;;
esac

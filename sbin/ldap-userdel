#! /bin/sh -Cefu
###########################################################################
# ldap-userdel 1.0
#
# Copyright (C) 2012 - 2015 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
wrapper=${0%ldap-*}ldap-useradd
case ${1-} in
--help=man        ) exec "${0}" --help=troff | exec man -l -- -; exit ;;
--help=troff      ) exec help2man -L 'en_US.UTF-8' -N -n 'delete an LDAP user account' -s 8 -- "${0}" ;;
--help=* | --help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... USER

Delete an LDAP POSIX user account from an LDAP server using administrative
privileges.

Options:
 -h, --help[=FORMAT]    Show this help message and exit.
 -K, --key KEY=VALUE    Override a default configuration.
 -R, --root CHROOT_DIR  (ignored)
 -V, --version          Show version information and exit.
     --dry-run          Dump LDIF and exit.

Operands:
 USER             The username (the user identifier defined by the uid
                  attribute) of the LDAP POSIX user account which is to be
                  deleted using administrative privileges.

Environment:
 LDAPBINDDN       A distinguished name (DN) to be used for binding to an LDAP
                  server. The default is to search for a distinguished name
                  (DN) based on the current real username.
 LDAPBINDPW       A password for the distinguished name (DN) to be used for
                  binding to an LDAP server. The default is to prompt for
                  a password.
 LDAPCONF         A system LDAP configuration file.
 LDAPRC           A user LDAP configuration file.
 LDAPURI          An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPMODIFY_OPTS  Options for ldapmodify(1).
 LDAPSEARCH_OPTS  Options for ldapsearch(1).
 LOGNAME          A username.
 SUDO_USER        A real username.
 USER             A fallback username.

Files:
 /etc/ldap/ldap.conf  LDAP configuration. See also ldap.conf(5).

__USAGE__
--version ) unset LDAP_HAS_FRONTEND ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${wrapper}" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Options.
#
###########################################################################
while getopts hK:R:V-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--key | --root )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*}; unset OPTARG ;;
	esac
	case -${OPT}${OPTARG+=} in
	--help    | -h* | \
	--help=   ) exec "${0}" --help"${OPTARG+=${OPTARG}}" >&3 ;;
	--key=    | -K* ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--root=   | -R* ) ;;
	--version | -V* ) exec "${0}" --version >&3 ;;
	--dry-run ) exec >&3 ;;
	--*       ) OPTIND=1; getopts '' OPT "--${OPTARG-}"; exit 1 ;;
	*         ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
USER=${1-}
: "${USER:?}"

# LDAPBINDDN.
LDAPBINDDN=${LDAPBINDDN-$( exec "${wrapper}" --mode=binddn )}
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# LDAPBINDDN=%s\n' "${LDAPBINDDN}" ;;
esac

###########################################################################
#
# Values.
#
###########################################################################
# USER_DN_SPEC.
case ${USER} in
*=* ) USER_DN_SPEC=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
		-b "${USER}" \
		-o ldif-wrap=no \
		-s base \
		-- '(|(objectClass=inetOrgPerson)(objectClass=organizationalRole)(objectClass=posixAccount))' 1.1 \
	| sed -e '/^dn:/!d' -e 'q'
	) ;;
* ) USER_DN_SPEC=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
		-o ldif-wrap=no \
		-z 1 \
		-- "(&(objectClass=posixAccount)(uid=${USER}))" 1.1 \
	| sed -e '/^dn:/!d' -e 'q'
	) ;;
esac
: "${USER_DN_SPEC:?}"

###########################################################################
#
# LDIF.
#
###########################################################################
# USER_GROUPS.
ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
	-o ldif-wrap=no \
	-- "(&(objectClass=posixGroup)(memberUid=${USER}))" 1.1 \
| sed -e '/^dn:/a\
changetype: modify\
delete: memberUid\
memberUid: '"${USER}"'\
-'

# USER.
cat << __LDIF__
${USER_DN_SPEC}
changetype: delete

__LDIF__

# GROUP.
ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
	-o ldif-wrap=no \
	-- "(&(objectClass=posixGroup)(cn=${USER}))" memberUid \
| sed -n \
	-e 'H' \
	-e '/^dn:/h' \
	-e '/^$/!d' \
	-e 'g' \
	-e 's/^\(dn:[^\n]*\)\(\nmemberUid: '"${USER}"'\)*\n$/\1\
changetype: delete\
/p'

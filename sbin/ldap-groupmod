#! /bin/sh -Cefu
###########################################################################
# ldap-groupmod 1.0
#
# Copyright (C) 2012 - 2015 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
wrapper=${0%ldap-*}ldap-groupadd
case ${1-} in
--help=man        ) exec "${0}" --help=troff | exec man -l -- -; exit ;;
--help=troff      ) exec help2man -L 'en_US.UTF-8' -N -n 'modify an LDAP POSIX group' -s 8 -- "${0}" ;;
--help=* | --help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... GROUP

Modify an LDAP POSIX group on an LDAP server using administrative privileges.

Options:
 -a, --add USER            Add USER to the group.
 -d, --delete USER         Remove USER from the group.
 -g, --gid GID             Change the group ID.
 -h, --help[=FORMAT]       Show this help message and exit.
 -K, --key KEY=VALUE       Override a default configuration.
 -M, --members USERS       Set the members of the group.
 -n, --new-name NEW_GROUP  Change the group name.
     --new-superior-dn DN  Change the superior LDAP entry of the group.
 -o, --non-unique          (ignored)
 -R, --root CHROOT_DIR     (ignored)
 -V, --version             Show version information and exit.
     --dry-run             Dump LDIF and exit.

Operands:
 GROUP            The name (the common name defined by cn attribute) of
                  the LDAP POSIX group which is to be modified using
                  administrative privileges.

Environment:
 LDAPBINDDN       A distinguished name (DN) to be used for binding to an LDAP
                  server. The default is to search for a distinguished name
                  (DN) based on the current real username.
 LDAPBINDPW       A password for the distinguished name (DN) to be used for
                  binding to an LDAP server. The default is to prompt for
                  a password.
 LDAPCONF         A system LDAP configuration file.
 LDAPRC           A user LDAP configuration file.
 LDAPURI          An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPMODIFY_OPTS  Options for ldapmodify(1).
 LDAPSEARCH_OPTS  Options for ldapsearch(1).
 LOGNAME          A username.
 SUDO_USER        A real username.
 USER             A fallback username.

Files:
 /etc/ldap/ldap.conf  LDAP configuration. See also ldap.conf(5).

__USAGE__
--version ) unset LDAP_HAS_FRONTEND ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${wrapper}" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
unset GROUP_USERS GROUP_USERS_ADD GROUP_USERS_DELETE
unset NEW_GROUP NEW_SUPERIOR_DN

###########################################################################
#
# Options.
#
###########################################################################
while getopts a:d:g:hK:M:n:oR:V-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--add             | \
	--delete          | \
	--gid             | \
	--key             | \
	--members         | \
	--new-name        | \
	--new-superior-dn | \
	--root            )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*}; unset OPTARG ;;
	esac
	case -${OPT}${OPTARG+=} in
	--add=       | -a* ) GROUP_USERS_ADD="${GROUP_USERS_ADD-}\\
memberUid: ${OPTARG}" ;;
	--delete=    | -d* ) GROUP_USERS_DELETE="${GROUP_USERS_DELETE-}\\
memberUid: ${OPTARG}" ;;
	--gid=       | -g* ) GROUP_GID=${OPTARG} ;;
	--help       | -h* | \
	--help=      ) exec "${0}" --help"${OPTARG+=${OPTARG}}" >&3 ;;
	--key=       | -K* ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--members=   | -M* ) GROUP_USERS=${OPTARG} ;;
	--new-name=  | -n* ) NEW_GROUP=${OPTARG} ;;
	--new-superior-dn= ) NEW_SUPERIOR_DN=${OPTARG} ;;
	--non-unique | -o* ) ;;
	--root=      | -R* ) ;;
	--version    | -V* ) exec "${0}" --version >&3 ;;
	--dry-run    ) exec >&3 ;;
	--*          ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*            ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
GROUP=${1-}
: "${GROUP:?}"

# LDAPBINDDN.
LDAPBINDDN=${LDAPBINDDN-$( exec "${wrapper}" --mode=binddn )}
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# ,,,[%s],,,\n' "LDAPBINDDN=${LDAPBINDDN}" ;;
esac

###########################################################################
#
# Values.
#
###########################################################################
# GROUP_DN, GROUP_DN_SPEC.
case ${GROUP} in
*=* )
	GROUP_DN_SPEC=$(
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-b "${GROUP}" \
			-o ldif-wrap=no \
			-s base \
			-- '(objectClass=posixGroup)' 1.1 \
		| sed -e '/^dn:/!d' -e 'q'
		)
	GROUP_DN=${GROUP_DN_SPEC:+${GROUP}}
	;;
* )
	GROUP_DN_SPEC=$(
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-z 1 \
			-- "(&(objectClass=posixGroup)(cn=${GROUP}))" 1.1 \
			2> /dev/null \
		| sed -e '/^dn: */!d' -e 's///' -e 'q'
		)
	case ${GROUP_DN_SPEC} in
	'dn:: '* ) GROUP_DN=$( echo "${GROUP_DN_SPEC#"dn:: "}" | base64 -d ) ;;
	'dn: '*  ) GROUP_DN=${GROUP_DN_SPEC#"dn: "} ;;
	*        ) GROUP_DN= ;;
	esac
	;;
esac
: "${GROUP_DN:?}" "${GROUP_DN_SPEC:?}"

###########################################################################
#
# LDIF.
#
###########################################################################
# GROUP_GID.
case ${GROUP_GID++} in
+* ) cat << __LDIF__ ;;
${GROUP_DN_SPEC}
changetype: modify
replace: gidNumber
gidNumber: ${GROUP_GID}
-

__LDIF__
esac

# GROUP_USERS, GROUP_USERS_ADD, GROUP_USERS_DELETE.
case ${GROUP_USERS++}${GROUP_USERS_ADD++}${GROUP_USERS_DELETE++} in
+* )
	GROUP_USERS_REPLACE= IFS=,
	for USER in ${GROUP_USERS-}
	do
		case ${USER:++} in
		+ ) GROUP_USERS_REPLACE="${GROUP_USERS_REPLACE}\\
memberUid: ${USER}" ;;
		esac
	done
	unset IFS
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
		-b "${GROUP_DN}" \
		-o ldif-wrap=no \
		-s base \
		-- '(objectClass=*)' 1.1 \
	| sed \
		-e '/^dn:/a\
changetype: modify' \
		${GROUP_USERS_DELETE+ -e "/^dn:/a\\
delete: memberUid${GROUP_USERS_DELETE}\\
-" } \
		${GROUP_USERS+        -e "/^dn:/a\\
replace: memberUid${GROUP_USERS_REPLACE}\\
-" } \
		${GROUP_USERS_ADD+    -e "/^dn:/a\\
add: memberUid${GROUP_USERS_ADD}\\
-" }
	;;
esac

# NEW_GROUP, NEW_SUPERIOR_DN.
case ${NEW_GROUP++}${NEW_SUPERIOR_DN++} in
+* ) cat << __LDIF__ ;;
${GROUP_DN_SPEC}
changetype: modrdn
newrdn: cn=${NEW_GROUP-${GROUP}}
deleteoldrdn: 1${NEW_SUPERIOR_DN+
newsuperior: ${NEW_SUPERIOR_DN}}

__LDIF__
esac

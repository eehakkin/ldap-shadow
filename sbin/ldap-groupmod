#! /bin/sh -Cefu
###########################################################################
# ldap-groupmod 1.0
#
# Copyright (C) 2012 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
case ${1-} in
--help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... GROUP

Options:
 -a, --add USER            Add USER to the group.
 -d, --delete USER         Remove USER from the group.
 -g, --gid GID             Change the group ID.
 -h, --help                Display this help message and exit.
 -K, --key KEY=VALUE       Override a default configuration.
 -M, --members USERS       Set the members of the group.
 -n, --new-name NEW_GROUP  Change the group name.
 -o, --non-unique          (ignored)
     --dump-ldif           Dump LDIF and exit.

__USAGE__
esac
${LDAP_HAS_FRONTEND:+:} exec "${0%ldap-*}ldap-groupadd" --mode=frontend "${0}" "${@}"
unfold() { exec sed -e ': in' -e 'N' -e 's/\n //' -e 't in' -e 'P' -e 'D'; }

###########################################################################
#
# Defaults.
#
###########################################################################
unset GROUP_GID GROUP_USERS GROUP_USER_ADD GROUP_USER_DELETE
unset NEW_GROUP NEW_SUPERIOR_DN

###########################################################################
#
# Options.
#
###########################################################################
while getopts a:d:g:hK:M:n:o-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--add | --delete | --gid | --key | --members | --new-name )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*} OPTARG= ;;
	esac
	case -${OPT} in
	--add        | -a ) GROUP_USER_ADD=${OPTARG} ;;
	--delete     | -d ) GROUP_USER_DELETE=${OPTARG} ;;
	--gid        | -g ) GROUP_GID=${OPTARG} ;;
	--help       | -h ) exec "${0}" --help >&3 ;;
	--key        | -K ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--members    | -M ) GROUP_USERS=${OPTARG} ;;
	--new-name   | -n ) NEW_GROUP=${OPTARG} ;;
	--non-unique | -o ) ;;
	--dump-ldif  ) exec >&3 ;;
	--*          ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*            ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
GROUP=${1-}
: "${GROUP:?}"

# LDAPBINDDN.
LDAPBINDDN=${LDAPBINDDN-$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -z 1 -- \
		"(&(objectClass=simpleSecurityObject)(|(cn=${SUDO_USER-${LOGNAME}})(cn=admin)))" \
		1.1 \
		2> /dev/null \
	| unfold \
	| sed -e '/^dn: */!d' -e 's///' -e 'q' \
	)}
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# LDAPBINDDN=%s\n' "${LDAPBINDDN}" ;;
esac

###########################################################################
#
# Values.
#
###########################################################################
# GROUP_DN.
GROUP_DN=${GROUP_DN-$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -z 1 -- \
		"(&(objectClass=posixGroup)(cn=${GROUP}))" 1.1 2> /dev/null \
	| unfold \
	| sed -e '/^dn: */!d' -e 's///' -e 'q'
	)}
: "${GROUP_DN:?}"

###########################################################################
#
# LDIF.
#
###########################################################################
# GROUP_GID.
case ${GROUP_GID++} in
+ ) cat << __LDIF__ ;;
dn: ${GROUP_DN}
changetype: modify
replace: gidNumber
gidNumber: ${GROUP_GID}
-

__LDIF__
esac

# GROUP_USERS, GROUP_USER_ADD, GROUP_USER_ADD.
case ${GROUP_USERS++}${GROUP_USER_ADD++}${GROUP_USER_DELETE++} in
+ )
	FILTERS= IFS=, LDIF=
	for USER in ${GROUP_USER_ADD+"${GROUP_USER_ADD}"} ${GROUP_USERS-}
	do
		case ${USER:++} in
		+ ) LDIF="${LDIF}\\
memberUid: ${USER}" ;;
		esac
	done
	unset IFS
	case ${GROUP_USER_ADD++}    in + ) FILTERS="${FILTERS}(!(memberUid=${GROUP_USER_ADD}))" ;; esac
	case ${GROUP_USER_DELETE++} in + ) FILTERS="${FILTERS}(memberUid=${GROUP_USER_DELETE})" ;; esac
	case ${GROUP_USERS++}       in + ) FILTERS="${FILTERS}(objectClass=*)"                  ;; esac
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -b "${GROUP_DN}" -s base -- \
		"(|${FILTERS})" memberUid \
	| unfold \
	| sed \
		-e '/^dn:/a\
changetype: modify\
replace: memberUid'"${LDIF}" ${GROUP_USERS+\
		-e '/^memberUid:/d' } ${GROUP_USER_ADD+\
		-e '/^memberUid: '"${GROUP_USER_ADD}"'$/d' } ${GROUP_USER_DELETE+\
		-e '/^memberUid: '"${GROUP_USER_DELETE}"'$/d' } \
		-e '/^$/i\
-'
	;;
esac

# NEW_GROUP.
case ${NEW_GROUP++}${NEW_SUPERIOR_DN++} in
+* ) cat << __LDIF__ ;;
dn: ${GROUP_DN}
changetype: modrdn
newrdn: cn=${NEW_GROUP-${GROUP}}
deleteoldrdn: 1${NEW_SUPERIOR_DN+"
newsuperior: ${NEW_SUPERIOR_DN}"}

__LDIF__
esac

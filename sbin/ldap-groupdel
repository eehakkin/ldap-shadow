#! /bin/sh -Cefu
###########################################################################
# ldap-groupdel 1.0
#
# Copyright (C) 2012 - 2022 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
wrapper=${0%-*}-groupadd
case ${1-} in
--help=man        ) exec "${0}" --help=troff | exec man -l -- -; exit ;;
--help=troff      ) exec help2man \
	-L 'C.UTF-8' \
	-N \
	-n 'delete an LDAP POSIX group' \
	-s 8 \
	-- "${0}" ;;
--help=* | --help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... GROUP

Delete an LDAP POSIX group from an LDAP server using administrative privileges.

Options:
 -h, --help[=FORMAT]    Show this help message and exit.
 -K, --key KEY=VALUE    Override a default configuration.
 -R, --root CHROOT_DIR  (ignored)
 -V, --version          Show version information and exit.
     --dry-run          Dump LDIF and exit.

Operands:
 GROUP             The name (the common name defined by cn attribute) of
                   the LDAP POSIX group which is to be deleted using
                   administrative privileges.

Environment:
 LDAPBINDDN        A distinguished name (DN) to be used for binding to an LDAP
                   server. The default is to search for a distinguished name
                   (DN) based on the current real username.
 LDAPBINDPW        A password for the distinguished name (DN) to be used for
                   binding to an LDAP server. The default is to prompt for
                   a password.
 LDAPCONF          A system LDAP configuration file.
 LDAPRC            A user LDAP configuration file.
 LDAPURI           An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPDEFAULT_OPTS  Default options for ldapmodify(1), ldapsearch(1) and
                   ldapwhoami(1).
 LDAPMODIFY_OPTS   Options for ldapmodify(1).
 LDAPSEARCH_OPTS   Options for ldapsearch(1).
 LDAPWHOAMI_OPTS   Options for ldapwhoami(1).
 LOGNAME           A username.
 SUDO_USER         A real username.
 USER              A fallback username.

Files:
 /etc/ldap/ldap.conf  LDAP configuration. See also ldap.conf(5).

__USAGE__
--version ) unset LDAP_HAS_FRONTEND ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${wrapper}" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
export GROUP GROUP_DN GROUP_DN_SPEC

###########################################################################
#
# Options.
#
###########################################################################
while getopts hK:R:V-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--key | --root )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*}; unset OPTARG ;;
	esac
	case -${OPT}${OPTARG+=} in
	--help    | -h* | \
	--help=   ) exec "${0}" --help"${OPTARG+=${OPTARG}}" 3>&- 4>&- ;;
	--key=    | -K* ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--root=   | -R* ) ;;
	--version | -V* ) exec "${0}" --version 3>&- 4>&- ;;
	--dry-run ) exec 3>&1 4>&1 ;;
	--*       ) OPTIND=1; getopts '' OPT "--${OPTARG-}"; exit 1 ;;
	*         ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
GROUP=${1-}
GROUP_DN_SPEC=$( exec "${wrapper}" --mode=group-dn-spec )
: "${GROUP_DN_SPEC:?}"

###########################################################################
#
# Values.
#
###########################################################################
# LDAPBINDDN.
case ${LDAPBINDDN++} in '' )
	LDAPBINDDN=$( exec "${wrapper}" --mode=real-admin-dn )
	export LDAPBINDDN
	printf '# ,,,[%s],,,\n' "LDAPBINDDN=${LDAPBINDDN}" >&4
esac
echo >&4

###########################################################################
#
# LDIF.
#
###########################################################################
# GROUP.
cat << __LDIF__ >&3
${GROUP_DN_SPEC}
changetype: delete

__LDIF__

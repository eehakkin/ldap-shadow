#! /bin/sh -Cefu
###########################################################################
# ldap-usermod 1.0
#
# Copyright (C) 2012 - 2015 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
wrapper=${0%ldap-*}ldap-useradd
case ${1-} in
--help=man        ) exec "${0}" --help=troff | exec man -l -- -; exit ;;
--help=troff      ) exec help2man -L 'en_US.UTF-8' -N -n 'modify an LDAP user account' -s 8 -- "${0}" ;;
--help=* | --help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... USER

Modify an LDAP POSIX user account on an LDAP server using administrative
privileges.

Options:
 -A, --add-attribute ATTR=VALUE        Add an LDAP attribute.
 -D, --delete-attribute ATTR[=VALUE]   Delete an LDAP attribute.
 -M, --replace-attribute ATTR[=VALUE]  Replace an LDAP attribute.
 -a, --append                Append the account to the secondary groups
                             specified using -G  without removing the account
                             from other groups.
 -c, --comment COMMENT       Change the full name of the account.
 -e, --expiredate DATE       Change the expire date of the account.
 -g, --gid GID               Change the primary group ID of the account.
 -G, --groups GROUPS         Change the secondary groups of the account.
 -h, --help[=FORMAT]         Show this help message and exit.
 -d, --home HOME_DIR         Change the home directory of the account.
 -f, --inactive INACTIVE     Change the password inactivity period.
 -K, --key KEY=VALUE         Override a default configuration.
 -l, --login LOGIN_NAME      Change the login name of the account.
     --new-superior-dn DN    Change the superior LDAP entry of the account.
 -o, --non-unique            (ignored)
 -R, --root CHROOT_DIR       (ignored)
 -s, --shell SHELL           Change the login shell of the account.
 -u, --uid UID               Change the user ID of the account.
 -V, --version               Show version information and exit.
     --dry-run               Dump LDIF and exit.

Operands:
 USER             The username (the user identifier defined by the uid
                  attribute) of the LDAP POSIX user account which is to be
                  modified using administrative privileges.

Environment:
 LDAPBINDDN       A distinguished name (DN) to be used for binding to an LDAP
                  server. The default is to search for a distinguished name
                  (DN) based on the current real username.
 LDAPBINDPW       A password for the distinguished name (DN) to be used for
                  binding to an LDAP server. The default is to prompt for
                  a password.
 LDAPCONF         A system LDAP configuration file.
 LDAPRC           A user LDAP configuration file.
 LDAPURI          An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPMODIFY_OPTS  Options for ldapmodify(1).
 LDAPSEARCH_OPTS  Options for ldapsearch(1).
 LOGNAME          A username.
 SUDO_USER        A real username.
 USER             A fallback username.

Files:
 /etc/ldap/ldap.conf  LDAP configuration. See also ldap.conf(5).

__USAGE__
--version ) unset LDAP_HAS_FRONTEND ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${wrapper}" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
APPEND= USER_LDIF=
unset NEW_SUPERIOR_DN NEW_USER
unset USER_COMMENT USER_GROUPS USER_HOME_DIR USER_SHELL
unset USER_EXPIRE USER_INACTIVE

###########################################################################
#
# Options.
#
###########################################################################
while getopts A:D:M:ac:d:e:f:g:G:hK:l:oR:s:u:V-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--add-attribute     | \
	--delete-attribute  | \
	--replace-attribute | \
	--comment           | \
	--expiredate        | \
	--home              | \
	--home-dir          | \
	--inactive          | \
	--gid               | \
	--groups            | \
	--key               | \
	--login             | \
	--new-superior-dn   | \
	--root              | \
	--shell             | \
	--uid               )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*}; unset OPTARG ;;
	esac
	case -${OPT}${OPTARG+=} in
	--add-attribute=     | -A* ) USER_LDIF="${USER_LDIF}
add: ${OPTARG%%=*}
${OPTARG%%=*}: ${OPTARG#*=}
-" ;;
	--delete-attribute=  | -D* ) x=${OPTARG#"${OPTARG%%=*}"}; USER_LDIF="${USER_LDIF}
delete: ${OPTARG%%=*}${x:+
${OPTARG%%=*}: ${OPTARG#*=}}
-" ;;
	--replace-attribute= | -M* ) x=${OPTARG#"${OPTARG%%=*}"}; USER_LDIF="${USER_LDIF}
replace: ${OPTARG%%=*}${x:+
${OPTARG%%=*}: ${OPTARG#*=}}
-" ;;
	--append             | -a* ) APPEND=+ ;;
	--comment=           | -c* ) USER_COMMENT=${OPTARG} ;;
	--expiredate=        | -e* )
		USER_EXPIRE=${OPTARG}
		case ${USER_EXPIRE} in *[![:digit:]]* )
			USER_EXPIRE=$(
				exec date -d "${USER_EXPIRE} UTC" +'%s'
				)
			USER_EXPIRE=$(( ${USER_EXPIRE} / ( 24 * 60 * 60 ) ))
		esac
		;;
	--gid=               | -g* ) USER_GID=${OPTARG} ;;
	--groups=            | -G* ) USER_GROUPS=${OPTARG} ;;
	--help               | -h* | \
	--help=              ) exec "${0}" --help"${OPTARG+=${OPTARG}}" >&3 ;;
	--home=              | \
	--home-dir=          | -d* ) USER_HOME_DIR=${OPTARG} ;;
	--inactive=          | -f* ) USER_INACTIVE=${OPTARG} ;;
	--key=               | -K* ) eval "${OPTARG%%=*}"='${OPTARG#*=}' ;;
	--login=             | -l* ) NEW_USER=${OPTARG} ;;
	--new-superior-dn=   ) NEW_SUPERIOR_DN=${OPTARG} ;;
	--non-unique         | -o* ) ;;
	--root=              | -R* ) ;;
	--shell=             | -s* ) USER_SHELL=${OPTARG} ;;
	--uid=               | -u* ) USER_UID=${OPTARG} ;;
	--version            | -V* ) exec "${0}" --version >&3 ;;
	--dry-run            ) exec >&3 ;;
	--*                  ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*                    ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
USER=${1-}
: "${USER:?}"

# LDAPBINDDN.
LDAPBINDDN=${LDAPBINDDN-$( exec "${wrapper}" --mode=binddn )}
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# LDAPBINDDN=%s\n' "${LDAPBINDDN}" ;;
esac

###########################################################################
#
# Values.
#
###########################################################################
# USER_DN, USER_DN_SPEC.
case ${USER} in
*=* )
	USER_DN_SPEC=$(
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-b "${USER}" \
			-o ldif-wrap=no \
			-s base \
			-- '(|(objectClass=inetOrgPerson)(objectClass=organizationalRole)(objectClass=posixAccount))' 1.1 \
		| sed -e '/^dn:/!d' -e 'q'
		)
	USER_DN=${USER_DN_SPEC:+${USER}}
	;;
* )
	USER_DN_SPEC=$(
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-z 1 \
			-- "(&(objectClass=posixAccount)(uid=${USER}))" 1.1 \
		| sed -e '/^dn:/!d' -e 'q'
		)
	case ${USER_DN_SPEC} in
	'dn:: '* ) USER_DN=$( echo "${USER_DN_SPEC#"dn:: "}" | base64 -d ) ;;
	'dn: '*  ) USER_DN=${USER_DN_SPEC#"dn: "} ;;
	*        ) USER_DN= ;;
	esac
	;;
esac
: "${USER_DN:?}" "${USER_DN_SPEC:?}"

# USER_COMMENT.
case ${USER_COMMENT++} in
+ ) NORMAL=$(
	exec ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
		-b "${USER_DN}" \
		-s base \
		-- '(objectClass=inetOrgPerson)' 1.1
	) ;;
esac

# USER_GID.
case ${USER_GID++} in
+ )
	case ${USER_GID} in
	*[![:digit:]]* ) USER_GID=$(
		getent -- group "${USER_GID}" \
		| cut -d : -f 3
		) ;;
	esac
	: "${USER_GID:?}"
	;;
esac

###########################################################################
#
# LDIF.
#
###########################################################################
# USER_COMMENT, USER_GID, USER_HOME_DIR, USER_SHELL, USER_EXPIRE, USER_INACTIVE, USER_UID, USER_LDIF.
case ${USER_COMMENT++}${USER_GID++}${USER_HOME_DIR++}${USER_SHELL++}${USER_EXPIRE++}${USER_INACTIVE++}${USER_UID++}${USER_LDIF:++} in
+* ) cat << __LDIF__ ;;
${USER_DN_SPEC}
changetype: modify${USER_COMMENT+
replace: cn
cn: ${USER_COMMENT}${NORMAL:+
-
replace: givenName
givenName: ${USER_COMMENT%%[[:space:]]*}
-
replace: sn
sn: ${USER_COMMENT#*[[:space:]]}}
-}${USER_GID+
replace: gidNumber
gidNumber: ${USER_GID}
-}${USER_HOME_DIR+
replace: homeDirectory
homeDirectory: ${USER_HOME_DIR}
-}${USER_SHELL+
replace: loginShell
loginShell: ${USER_SHELL}
-}${USER_EXPIRE+
replace: shadowExpire${USER_EXPIRE:+
shadowExpire: ${USER_EXPIRE}}
-}${USER_INACTIVE+
replace: shadowInactive${USER_INACTIVE:+
shadowInactive: ${USER_INACTIVE}}
-}${USER_UID+
replace: uidNumber
uidNumber: ${USER_UID}
-}${USER_LDIF}

__LDIF__
esac

# USER_GROUPS.
case ${NEW_USER++}${USER_GROUPS++} in
+* )
	FILTERS= IFS=,
	for GROUP in ${USER_GROUPS-}
	do
		case ${GROUP:++} in
		+ ) FILTERS="${FILTERS}(cn=${GROUP})" ;;
		esac
	done
	unset IFS
	case ${APPEND:++},${USER_GROUPS++},${NEW_USER++} in
	,+,* ) # -G GROUPS [-l NEW_USER]
		# Remove USER from other groups.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(objectClass=posixGroup)${FILTERS:+(!(|${FILTERS}))}(memberUid=${USER}))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
delete: memberUid\\
memberUid: ${USER}\\
-"
		;;
	*,,+ | +,+,+ ) # [-a [-G GROUPS]] -l NEW_USER
		# Remove USER from other groups
		# if NEW_USER is a member of them.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(objectClass=posixGroup)${FILTERS:+(!(|${FILTERS}))}(memberUid=${USER})(memberUid=${NEW_USER}))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
delete: memberUid\\
memberUid: ${USER}\\
-"
		# Add NEW_USER to and remove USER from other groups
		# if NEW_USER is not a member of them.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(objectClass=posixGroup)${FILTERS:+(!(|${FILTERS}))}(memberUid=${USER})(!(memberUid=${NEW_USER})))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
add: memberUid\\
memberUid: ${NEW_USER}\\
-\\
delete: memberUid\\
memberUid: ${USER}\\
-"
		;;
	esac
	case ${FILTERS:++},${NEW_USER++} in
	+, ) # [-a] -G GROUPS
		# Add USER to the groups if USER is not a member of them.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(objectClass=posixGroup)(|${FILTERS})(!(memberUid=${USER})))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
add: memberUid\\
memberUid: ${USER}\\
-"
		;;
	+,+ ) # [-a] -GROUPS -l NEW_USER
		# Remove USER from the groups
		# if NEW_USER is a member of them.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(objectClass=posixGroup)(|${FILTERS})(memberUid=${USER})(memberUid=${NEW_USER}))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
delete: memberUid\\
memberUid: ${USER}\\
-"
		# Add NEW_USER to and remove USER from the groups
		# if NEW_USER is not a member of them but USER is.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(objectClass=posixGroup)(|${FILTERS})(memberUid=${USER})(!(memberUid=${NEW_USER})))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
add: memberUid\\
memberUid: ${NEW_USER}\\
-\\
delete: memberUid\\
memberUid: ${USER}\\
-"
		# Add NEW_USER to the groups
		# if NEW_USER is not a member of them and neither is USER.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(objectClass=posixGroup)(|${FILTERS})(!(memberUid=${USER}))(!(memberUid=${NEW_USER})))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
add: memberUid\\
memberUid: ${NEW_USER}\\
-"
		;;
	esac
	;;
esac

# NEW_USER.
case ${NEW_SUPERIOR_DN++}${NEW_USER++} in
+* )
	: "${USER_DN:?}"
	NEW_USER_DN=uid=${NEW_USER-${USER}},${NEW_SUPERIOR_DN-${USER_DN#*,}}
	for DN_ATTRIBUTE in \
		aliasedObjectName	\
		associatedName		\
		documentAuthor		\
		manager			\
		member			\
		owner			\
		roleOccupant		\
		secretary		\
		seeAlso
	do
		# Remove USER_DN from the groups
		# if NEW_USER_DN is a member of them.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(${DN_ATTRIBUTE}=${USER_DN})(${DN_ATTRIBUTE}=${NEW_USER_DN}))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
delete: ${DN_ATTRIBUTE}\\
${DN_ATTRIBUTE}: ${USER_DN}\\
-"
		# Add NEW_USER_DN to and remove USER_DN from the groups
		# if NEW_USER_DN is not a member of them.
		ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
			-o ldif-wrap=no \
			-- "(&(${DN_ATTRIBUTE}=${USER_DN})(!(${DN_ATTRIBUTE}=${NEW_USER_DN})))" 1.1 \
		| sed -e "/^dn:/a\\
changetype: modify\\
add: ${DN_ATTRIBUTE}\\
${DN_ATTRIBUTE}: ${NEW_USER_DN}\\
-\\
delete: ${DN_ATTRIBUTE}\\
${DN_ATTRIBUTE}: ${USER_DN}\\
-"
	done
	cat << __LDIF__
${USER_DN_SPEC}
changetype: modrdn
newrdn: uid=${NEW_USER-${USER}}
deleteoldrdn: 1${NEW_SUPERIOR_DN+
newsuperior: ${NEW_SUPERIOR_DN}}

__LDIF__
	;;
esac

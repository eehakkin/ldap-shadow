#! /bin/sh -Cefu
###########################################################################
# ldap-chsh 1.0
#
# Copyright (C) 2012 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
unfold() { exec sed -e ': in' -e 'N' -e 's/\n //' -e 't in' -e 'P' -e 'D'; }
case ${1-} in
--help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... [USER]

Options:
 -h, --help         Display this help message and exit.
 -s, --shell SHELL  Change the login shell of the account to SHELL.
     --dump-ldif    Dump LDIF and exit.

Operands:
 USER               A username or a distinguished name (DN) of the user
                    whose account is to be modified using administration
                    privileges.
                    The default is to modify the account of the current user
                    using user privileges.

Environment:
 LDAPBINDDN       A distinguished name (DN) to be used for binding to an LDAP
                  server. The default is to search for an distinguished name
                  (DN) based on the current real username.
 LDAPBINDPW       A password for the distinguished name (DN) to be used for
                  binding to an LDAP server. The default is to prompt for
                  a password.
 LDAPCONF         A system LDAP configuration file.
 LDAPRC           A user LDAP configuration file.
 LDAPURI          An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPMODIFY_OPTS  Options for ldapmodify(1).
 LDAPSEARCH_OPTS  Options for ldapsearch(1).
 LOGNAME          A username.
 SUDO_USER        A real username.
 USER             A fallback username.

__USAGE__
esac
${LDAP_HAS_FRONTEND:+:} exec "${0%ldap-*}ldap-passwd" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
LOGNAME=${LOGNAME-${USER-$( id -un )}}
unset USER_SHELL

###########################################################################
#
# Options.
#
###########################################################################
while getopts hs:-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--shell )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*} OPTARG= ;;
	esac
	case -${OPT} in
	--help  | -h ) exec "${0}" --help >&3 ;;
	--shell | -s ) USER_SHELL=${OPTARG} ;;
	--dump-ldif  ) exec >&3 ;;
	--*          ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*            ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
USER=${1-${LOGNAME}}
: "${USER:?}"

###########################################################################
#
# Values.
#
###########################################################################
# USER_DN.
case ${USER} in
*=* ) USER_DN=${USER} ;;
*   ) USER_DN=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} -z 1 -- \
		"(&(objectClass=posixAccount)(uid=${USER}))" 1.1 2> /dev/null \
	| unfold \
	| sed -e '/^dn: */!d' -e 's///' -e 'q'
	) ;;
esac
: "${USER_DN:?}"

# LDAPBINDDN.
case ${1++} in
+ ) LDAPBINDDN=${LDAPBINDDN-$(
	printf '%s\n' "${SUDO_USER-${LOGNAME}}" 'admin' \
	| ldapsearch -LLLM ${LDAPSEARCH_OPTS} -f - -z 1 -- \
		"(&(objectClass=simpleSecurityObject)(cn=%s))" 1.1 \
		2> /dev/null \
	| unfold \
	| sed -e '/^dn: */!d' -e 's///' -e 'q'
	)} ;;
* ) LDAPBINDDN=${USER_DN} ;;
esac
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# LDAPBINDDN=%s\n' "${LDAPBINDDN}" ;;
esac

# USER_SHELL.
case ${USER_SHELL++} in
'' )
	printf "$( gettext -d shadow -- 'Changing the login shell for %s
' )\\n" "${USER}" >&2
	gettext -d shadow -s -- 'Enter the new value, or press ENTER for the default' >&2
	value=$( getent -- passwd "${USER}" | cut -d : -f 7 )
	printf '\t%s [%s]: ' "$( gettext -d shadow -- 'Login Shell' )" "${value}" >&2
	IFS= read -r REPLY
	case ${REPLY} in
	*[![:space:]]* ) USER_SHELL=${REPLY} ;;
	[[:space:]]*   ) USER_SHELL= ;;
	esac
	;;
esac

###########################################################################
#
# LDIF.
#
###########################################################################
# USER_SHELL.
case ${USER_SHELL++} in
+ ) cat << __LDIF__ ;;
dn: ${USER_DN}
changetype: modify
replace: loginShell${USER_SHELL:+
loginShell: ${USER_SHELL}}
-

__LDIF__
esac

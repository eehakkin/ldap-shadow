#! /bin/sh -Cefu
###########################################################################
# ldap-chsh 1.0
#
# Copyright (C) 2012 - 2014 Eero Häkkinen <Eero+ldap-shadow@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
wrapper=${0%ldap-*}ldap-passwd
case ${1-} in
--help=man        ) exec "${0}" --help=troff | exec man -l -- -; exit ;;
--help=troff      ) exec help2man -L 'en_US.UTF-8' -N -n 'change the login shell of an LDAP user account' -s 1 -- "${0}" ;;
--help=* | --help ) exec cat << __USAGE__ ;;
Usage: ${0##*[\\/]} [OPTION]... [USER]

Change the login shell of an LDAP user account on an LDAP server. Whether or
not a normal user may change the login shell for her own LDAP user account
without administrative privileges depends on access control configuration on
the LDAP server being used.

Options:
 -h, --help[=FORMAT]    Show this help message and exit.
 -R, --root CHROOT_DIR  (ignored)
 -s, --shell SHELL      Change the login shell of the account.
 -V, --version          Show version information and exit.
     --dry-run          Dump LDIF and exit.

Operands:
 USER             The username (the user identifier defined by the uid
                  attribute) or the distinguished name (DN) of the LDAP user
                  account which is to be modified using administrative
                  privileges.
                  The default is to modify the LDAP POSIX user account of
                  the current user using user privileges.

Environment:
 LDAPBINDDN       A distinguished name (DN) to be used for binding to an LDAP
                  server. The default is to search for a distinguished name
                  (DN) based on the current real username.
 LDAPBINDPW       A password for the distinguished name (DN) to be used for
                  binding to an LDAP server. The default is to prompt for
                  a password.
 LDAPCONF         A system LDAP configuration file.
 LDAPRC           A user LDAP configuration file.
 LDAPURI          An URI of an LDAP server or a list of URIs of LDAP servers.
 LDAPMODIFY_OPTS  Options for ldapmodify(1).
 LDAPSEARCH_OPTS  Options for ldapsearch(1).
 LOGNAME          A username.
 SUDO_USER        A real username.
 USER             A fallback username.

Files:
 /etc/ldap/ldap.conf  LDAP configuration. See also ldap.conf(5).

__USAGE__
--version ) unset LDAP_HAS_FRONTEND ;;
esac
${LDAP_HAS_FRONTEND:+:} exec "${wrapper}" --mode=frontend "${0}" "${@}"

###########################################################################
#
# Defaults.
#
###########################################################################
LOGNAME=${LOGNAME-${USER-$( exec id -un )}}
unset USER_SHELL

###########################################################################
#
# Options.
#
###########################################################################
while getopts hR:s:V-: OPT "${@}"
do
	case -${OPT}${OPTARG-} in
	--root | --shell )
		OPT=${OPT}${OPTARG}
		eval 'OPTARG=${'"${OPTIND}"'?}'
		OPTIND=$(( ${OPTIND} + 1 ))
		;;
	--*=* ) OPT=${OPT}${OPTARG%%=*} OPTARG=${OPTARG#*=} ;;
	--*   ) OPT=${OPT}${OPTARG%%=*}; unset OPTARG ;;
	esac
	case -${OPT}${OPTARG+=} in
	--help    | -h* | \
	--help=   ) exec "${0}" --help"${OPTARG+=${OPTARG}}" >&3 ;;
	--root=   | -R* ) ;;
	--shell=  | -s* ) USER_SHELL=${OPTARG} ;;
	--version | -V* ) exec "${0}" --version >&3 ;;
	--dry-run ) exec >&3 ;;
	--*       ) OPTIND=1; getopts '' OPT "-${OPT}"; exit 1 ;;
	*         ) exit 1 ;;
	esac
done
shift $(( $OPTIND - 1 ))
USER=${1-${LOGNAME}}
: "${USER:?}"

###########################################################################
#
# Values.
#
###########################################################################
# USER_DN.
case ${USER} in
*=* ) USER_DN=${USER} ;;
*   ) USER_DN=$(
	ldapsearch -LLLM ${LDAPSEARCH_OPTS} \
		-o ldif-wrap=no \
		-z 1 \
		-- "(&(objectClass=posixAccount)(uid=${USER}))" 1.1 \
		2> /dev/null \
	| sed -e '/^dn: */!d' -e 's///' -e 'q'
	) ;;
esac
: "${USER_DN:?}"

# LDAPBINDDN.
case ${1++} in
+ ) LDAPBINDDN=${LDAPBINDDN-$( exec "${wrapper}" --mode=binddn )} ;;
* ) LDAPBINDDN=${USER_DN} ;;
esac
case ${LDAPBINDDN:++} in
+ ) export LDAPBINDDN; printf '# LDAPBINDDN=%s\n' "${LDAPBINDDN}" ;;
esac

# USER_SHELL.
case ${USER_SHELL++} in
'' )
	printf "$( exec gettext -d shadow -- 'Changing the login shell for %s
' )\\n" "${USER}" >&2
	gettext -d shadow -s -- 'Enter the new value, or press ENTER for the default' >&2
	value=$( getent -- passwd "${USER}" | cut -d : -f 7 )
	printf '\t%s [%s]: ' \
		"$( exec gettext -d shadow -- 'Login Shell' )" \
		"${value}" \
		>&2
	IFS= read -r REPLY
	case ${REPLY} in
	*[![:space:]]* ) USER_SHELL=${REPLY} ;;
	[[:space:]]*   ) USER_SHELL= ;;
	esac
	;;
esac

###########################################################################
#
# LDIF.
#
###########################################################################
# USER_SHELL.
case ${USER_SHELL++} in
+* ) cat << __LDIF__ ;;
dn: ${USER_DN}
changetype: modify
replace: loginShell${USER_SHELL:+
loginShell: ${USER_SHELL}}
-

__LDIF__
esac
